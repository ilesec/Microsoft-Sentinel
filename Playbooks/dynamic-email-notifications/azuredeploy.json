{
        "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
        "contentVersion": "1.1.0.0",
        "metadata": {
            "title": "Send email with with dynamic recipients and alert custom details",
        "description": "This playbook will be sending email with formated incidents report (Incident title, severity, tactics, link,…) when incident is created in Microsoft Sentinel. Email notification is made in HTML. Send Email with Formatted Incident Report playbnook by Benjamin Kovacevic was used as the HTML template, the original is available here: https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/SentinelSOARessentials/Playbooks/Send-email-with-formatted-incident-report/azuredeploy.json",
        "prerequisites": "An O365 account to be used to send email notification (The user account will be used in O365 connector (Send an email).) Link with company logo. No formating since size is defined in the Playbook. Linke example - https://azure.microsoft.com/svghandler/azure-sentinel",
        "postDeployment": [ "**1.Configure connections**\nEdit the Logic App or go to Logic app designer.\nExpand “Send an email with the composed message” and fix this connector by adding a new connection or signing-in to marked one with user that has mailbox. Do the same for action ”Send an email if something goes wrong” and also fix the connection ”Run query and list results V2 for CustomerName parameter”\nNote:  Email sent with this playbook will be from user that creates the connection!\n**Attach the playbook**\nAttach the playbook\n" ],
        "lastUpdateTime": "2024-12-16T00:00:00.000Z",
        "entities": [],
        "tags": ["Notification" ],
        "support": {
            "tier": "community"
        },
        "author": {
            "name": "Ilkka Hyvönen"
        },
        "releaseNotes": [
            {
                "version": "1.1.0",
                "title": "Send email with with dynamic recipients and alert custom details",
                "notes": [ "Initial version" ]
            }
        ]
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Email-Notification-Dynamic-Recipients",
            "type": "String"
        },
        "NotificationEmail": {
            "type": "String",
            "metadata": {
                "description": "If the logic app fails for some reason, notifications are sent to this e-mail address (e.g. soc@example.com)"
            }
        },
        "WorkspaceName": {
            "defaultValue": "WorkspaceName",
            "type": "String",
            "metadata": {
                "description": "Name of the workspace where related alerts are found"
            }
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('microsoftsentinel-', parameters('PlaybookName'))]",
        "o365ConnectionName": "[concat('o365-', parameters('PlaybookName'))]",
        "azuremonitorlogsConnectionName": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]"
    },
        "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
                {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuremonitorlogsConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('azuremonitorlogsConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('o365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "Send-email-with-formatted-incident-report",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('o365ConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "workspaceName": {
                            "defaultValue": "SentinelInstance",
                            "type": "String"
                        },
                        "WatchListName": {
                            "defaultValue": "CustomerEmailList",
                            "type": "String"
                        },
                        "WatchlistToColumn": {
                            "defaultValue": "Mails",
                            "type": "String"
                        },
                        "WatchListCarbonCopyColumn": {
                            "defaultValue": "CC",
                            "type": "String"
                        },
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "body": {
                                    "callback_url": "@listCallbackUrl()"
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Select_Entities_from_the_Incident": {
                            "runAfter": {
                                "Create_HTML_table_of_the_Alerts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "select": {
                                    "Entity": "@item()?['properties']?['friendlyName']",
                                    "Entity type": "@item()?['kind']"
                                }
                            }
                        },
                        "Create_HTML_table_from_the_Entities": {
                            "runAfter": {
                                "Select_Entities_from_the_Incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "from": "@body('Select_Entities_from_the_Incident')",
                                "format": "HTML"
                            }
                        },
                        "Send_an_email_if_something_goes_wrong": {
                            "runAfter": {
                                "Send_an_email_with_the_composed_message": [
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "To": "@parameters('NotificationEmail')",
                                    "Subject": "Issue sending Sentinel Incident notification",
                                    "Body": "<p class=\"editor-paragraph\"><span style=\"font-size: 15px;\">Issue sending Incident notification. Please check Logic Apps run histor</span>y.</p>",
                                    "Importance": "Normal"
                                },
                                "path": "/v2/Mail"
                            }
                        },
                        "Initialize_variable_CustomDetailsArray": {
                            "runAfter": {
                                "Select_Alerts_from_the_Incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "CustomDetails",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Send_an_email_with_the_composed_message": {
                            "runAfter": {
                                "Compose_E-mail_Message_with_all_the_details": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "To": "@body('Join_Contacts_with_union_of_itself')",
                                    "Subject": "New Sentinel Incident with ID @{triggerBody()?['object']?['properties']?['incidentNumber']}",
                                    "Body": "<p class=\"editor-paragraph\">@{outputs('Compose_E-mail_Message_with_all_the_details')}</p><br>",
                                    "Cc": "@body('Join_CarbonCopyContacts_with_a_union_of_itself')",
                                    "Importance": "Normal"
                                },
                                "path": "/v2/Mail"
                            }
                        },
                        "Initialize_variable_Contacts": {
                            "runAfter": {
                                "Initialize_variable_CustomDetailsArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Contacts",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "For_each_Alert": {
                            "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                            "actions": {
                                "Parse_JSON_of_the_Alert_Custom_Details": {
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@item()?['properties']?['additionalData']?['Custom Details']",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "CustomerName": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "WorkspaceSubId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "WorkspaceResourceId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "For_each_CustomerName": {
                                    "foreach": "@body('Parse_JSON_of_the_Alert_Custom_Details')?['CustomerName']",
                                    "actions": {
                                        "Run_query_and_list_results_V2_for_CustomerName_parameter": {
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "body": {
                                                    "query": "_GetWatchlist('@{parameters('WatchListName')}')\n| where Customer =~ \"@{items('For_each_CustomerName')}\"\n| project @{parameters('WatchlistToColumn')},@{parameters('WatchListCarbonCopyColumn')}",
                                                    "timerangetype": "Relative",
                                                    "timerange": {
                                                        "relativeTimeRange": "Last 24 hours"
                                                    }
                                                },
                                                "path": "/queryDataV2",
                                                "queries": {
                                                    "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                                                    "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                                                    "resourcetype": "Log Analytics Workspace",
                                                    "resourcename": "@parameters('workspaceName')",
                                                    "timerange": "Last 7 days"
                                                }
                                            }
                                        },
                                        "Parse_JSON_of_Watchlist_query_output": {
                                            "runAfter": {
                                                "Run_query_and_list_results_V2_for_CustomerName_parameter": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Run_query_and_list_results_V2_for_CustomerName_parameter')?['value']",
                                                "schema": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "Mails": {
                                                                "type": "string"
                                                            },
                                                            "CC": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Mails",
                                                            "CC"
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "For_each_JSON_output": {
                                            "foreach": "@outputs('Parse_JSON_of_Watchlist_query_output')['body']",
                                            "actions": {
                                                "Append_to_array_variable_Contacts": {
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "Contacts",
                                                        "value": "@items('For_each_JSON_output')['Mails']"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Parse_JSON_of_Watchlist_query_output": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "For_each": {
                                            "foreach": "@outputs('Parse_JSON_of_Watchlist_query_output')['body']",
                                            "actions": {
                                                "Append_to_array_variable_CarbonCobyContacts": {
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "CarbonCopyContacts",
                                                        "value": "@items('For_each')['CC']"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Parse_JSON_of_Watchlist_query_output": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    },
                                    "runAfter": {
                                        "Append_to_array_variable_CustomDetailsArray": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Append_to_array_variable_CustomDetailsArray": {
                                    "runAfter": {
                                        "Parse_JSON_of_the_Alert_Custom_Details": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "CustomDetails",
                                        "value": "@body('Parse_JSON_of_the_Alert_Custom_Details')"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_CarbonCopyContacts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Join_Contacts_with_union_of_itself": {
                            "runAfter": {
                                "For_each_Alert": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Join",
                            "inputs": {
                                "from": "@union(variables('Contacts'),variables('Contacts'))",
                                "joinWith": ";"
                            }
                        },
                        "Select_Alerts_from_the_Incident": {
                            "runAfter": {},
                            "type": "Select",
                            "inputs": {
                                "from": "@triggerBody()?['object']?['properties']?['Alerts']",
                                "select": {
                                    "Alerts": "@item()?['properties']?['alertDisplayName']"
                                }
                            }
                        },
                        "Create_HTML_table_of_the_Alerts": {
                            "runAfter": {
                                "Select_Alerts_from_the_Incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "from": "@body('Select_Alerts_from_the_Incident')",
                                "format": "HTML"
                            }
                        },
                        "Create_HTML_table_of_the_CustomDetailsArray": {
                            "runAfter": {
                                "Join_CarbonCopyContacts_with_a_union_of_itself": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "from": "@variables('CustomDetails')",
                                "format": "HTML"
                            }
                        },
                        "Compose_E-mail_Message_with_all_the_details": {
                            "runAfter": {
                                "Create_HTML_table_from_the_Entities": [
                                    "Succeeded"
                                ],
                                "Create_HTML_table_of_the_CustomDetailsArray": [
                                    "Succeeded"
                                ]
                            },
                     "type": "Compose",
                "inputs": "<!DOCTYPE html>\n<html>\n<body>\nNew incident created in Microsoft Sentinel. Incident details:\n\n<table style=\"width: 100%; border-collapse: collapse;\" border=\"1\" width=\"100%\">\n\n<tbody>\n\n<tr>\n<td style=\"width: 19%;\" align=\"left\" width=\"19%\">\n<strong><img src=\"https://azure.microsoft.com/svghandler/azure-sentinel?width=150&amp;height=79\" alt=\"\" /></strong>\n</td>\n\n<td style=\"width: 20%;\" width=\"20%\">\n<p><span style=\"font-size: 12pt;\"><strong>Incident ID: @{triggerBody()?['object']?['properties']?['incidentNumber']}</strong></span></p>\n<p><span style=\"font-size: 13pt;\"><strong><a href=\"@{triggerBody()?['object']?['properties']?['incidentUrl']}\">View incident</a></strong></span></p>\n</td>\n\n</tr>\n\n<tr>\n<td style=\"width: 93.1434%;\" colspan=\"4\" width=\"100%\">\n<p><strong>Incident title:</strong></p>\n<p><span style=\"font-size: 16pt;\">@{triggerBody()?['object']?['properties']?['title']}</span></p>\n<p>&nbsp;</p>\n</td>\n</tr>\n\n</tbody>\n</table>\n\n<table style=\"width: 100%; border-collapse: collapse;\" border=\"1\" width=\"100%\">\n\n<tbody>\n\n<tr style=\"vertical-align: top;\">\n<td style=\"width: 23.25%; height: 190px;\">\n<p><span style=\"font-size: 12pt;\"><strong>Creation time</strong></span><br /><br/>\n<span style=\"font-size: 12.0pt;\">@{triggerBody()?['object']?['properties']?['createdTimeUtc']}</span></p>\n</td>\n\n<td style=\"width: 23.25%; height: 190px;\">\n<p><span style=\"font-size: 12pt;\"><strong>Severity</strong></span><br /><br/>\n<span style=\"font-size: 12.0pt;\">@{triggerBody()?['object']?['properties']?['severity']}</span></p>\n</td>\n\n<td style=\"width: 23.3934%; height: 190px;\">\n<p><span style=\"font-size: 12pt;\"><strong>Alert providers</strong></span><br /><br/>\n<span style=\"font-size: 12.0pt;\">@{join(triggerBody()?['object']?['properties']?['additionalData']?['alertProductNames'], '<br />')}</span></p>\n</td>\n\n<td style=\"width: 23.25%; height: 190px;\">\n<p><span style=\"font-size: 12pt;\"><strong>Tactics</strong></span><br /><br/>\n<span style=\"font-size: 12.0pt;\">@{join(triggerBody()?['object']?['properties']?['additionalData']?['tactics'], '<br />')}</span></p>\n</td>\n</tr>\n\n<td style=\"width: 93.1434%;\" colspan=\"4\" width=\"100%\">\n<p><span style=\"font-size: 12pt;\"><strong>Description</strong></span><br /><br />\n<span style=\"font-size: 12.0pt;\">@{triggerBody()?['object']?['properties']?['description']}</span></p>\n</td>\n</tr>\n\n<tr>\n<td style=\"width: 93.1434%;\" colspan=\"4\" width=\"100%\">\n<p><span style=\"font-size: 12pt;\"><strong>Entities</strong></span></p>\n<p>@{body('Create_HTML_table_from_the_Entities')}</p>\n<p>&nbsp;</p>\n</td>\n</tr>\n\n<tr>\n<td style=\"width: 93.1434%;\" colspan=\"4\" width=\"100%\">\n<p><strong>Alert Custom Details:</strong></p>\n<p><span style=\"font-size: 8pt;\">@{body('Create_HTML_table_of_the_CustomDetailsArray')}</span></p>\n<p>&nbsp;</p>\n</td>\n</tr>\n\n</tbody>\n</table>\n\n</html>"
            },
                        "Initialize_variable_CarbonCopyContacts": {
                            "runAfter": {
                                "Initialize_variable_Contacts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "CarbonCopyContacts",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Join_CarbonCopyContacts_with_a_union_of_itself": {
                            "runAfter": {
                                "Join_Contacts_with_union_of_itself": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Join",
                            "inputs": {
                                "from": "@union(variables('CarbonCopyContacts'),variables('CarbonCopyContacts'))",
                                "joinWith": ";"
                            }
                        }
                    },
                    "outputs": {}
                },
    "parameters": {
        "$connections": {
            "value": {
                "azuresentinel": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                    "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                    "connectionProperties": {
                        "authentication": {
                            "type": "ManagedServiceIdentity"
                        }
                    }
                },
                "office365": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('o365ConnectionName'))]",
                    "connectionName": "[variables('o365ConnectionName')]",
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                },
                "azuremonitorlogs": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]",
                    "connectionName": "[variables('azuremonitorlogsConnectionName')]",
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        }
    }
}
}
]
}